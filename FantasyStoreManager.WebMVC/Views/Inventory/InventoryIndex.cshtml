@model IEnumerable<FantasyStoreManager.Models.InventoryListItem>

@{
    ViewBag.Title = "InventoryIndex";
}

<div class="inventoryHeader">
    <h2 id="inventoryHeaderSize">Store Inventory</h2>
</div>
<<div class="surround">
    @if (TempData.ContainsKey("SaveResult"))
    {
        <div class="alert alert-success fade in" role="alert">
            @ViewBag.SaveResult
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
            @TempData["SaveResult"]
        </div>
    }

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Product Name", "InventoryIndex", new { sortOrder = ViewBag.ProductNameSort })
                @if (ViewBag.ProductNameSort == "productName_desc" && ViewBag.CurrentSortOrder == "name")
                {
                    <i class="glyphicon @(ViewBag.ProductNameSort == "productName_desc" ? "glyphicon-arrow-down" : "glyphicon-arrow-up")"></i>
                }
                else if (ViewBag.ProductNameSort == "" && ViewBag.CurrentSortOrder == "name")
                {
                    <i class="glyphicon @(ViewBag.ProductNameSort == "" ? "glyphicon-arrow-up" : "glyphicon-arrow-down")"></i>
                }
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.ActionLink("Quantity", "InventoryIndex", new { sortOrder = ViewBag.QuantitySort })
                @if (ViewBag.QuantitySort == "Quantity" && ViewBag.CurrentSortOrder == "quantity")
                {
                    <i class="glyphicon @(ViewBag.QuantitySort == "Quantity" ? "glyphicon-arrow-down" : "glyphicon-arrow-up")"></i>
                }
                else if (ViewBag.QuantitySort == "quantity_desc" && ViewBag.CurrentSortOrder == "quantity")
                {
                    <i class="glyphicon @(ViewBag.QuantitySort == "quantity_desc" ? "glyphicon-arrow-up" : "glyphicon-arrow-down")"></i>
                }
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.InventoryId }) |
                    @Html.ActionLink("Details", "Details", "Product", new { id = item.ProductId }, null) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.InventoryId })
                </td>
            </tr>
        }

    </table>

    <div>
        @Html.ActionLink("Back to Stores", "Index")
    </div>
</div>