@model FantasyStoreManager.Models.InventoryCreate

@{
    ViewBag.Title = "Create";
}

<div class="inventoryHeader">
    <h2 id="inventoryHeaderSize">Create</h2>
</div>

<div class="surround">
    @if (Model.Inventories != null)
    {
        <h3>Current Inventory</h3>
        <div class="table-responsive">
            <table class="table">
                <tr>
                    <th></th>
                    <th>Product</th>
                    <th>Desicription</th>
                    <th>Quantity</th>
                </tr>
                @foreach (var inventory in Model.Inventories)
                {
                    <tr>
                        <td></td>
                        <td>
                            @inventory.Product.Name
                        </td>
                        <td>
                            @inventory.Product.Description
                        </td>
                        <td>
                            @inventory.Quantity
                        </td>
                    </tr>
                }
            </table>
        </div>
    }

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>InventoryCreate</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Store.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Display("StoreId.Name", null)
                    @Html.ValidationMessageFor(model => model.StoreId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
